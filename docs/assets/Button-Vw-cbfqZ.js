import{R as e}from"./iframe-DPTEoTx4.js";const l=e.forwardRef(({variant:o="primary",size:u="medium",children:d,disabled:a=!1,loading:t=!1,fullWidth:m=!1,startIcon:i,endIcon:s,onClick:n,type:c="button",className:p="",testId:f,...y},v)=>{const b="btn-ios inline-flex items-center justify-center font-sf-pro font-semibold transition-all duration-200 ease-ios focus:outline-none focus-visible:ring-2 focus-visible:ring-systemBlue-500 focus-visible:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none",h={primary:"btn-primary",secondary:"btn-secondary",destructive:"btn-destructive",ghost:"btn-ghost",plain:"bg-transparent text-systemBlue-500 hover:bg-fill-quaternary active:bg-fill-tertiary dark:text-systemBlue-400 dark:hover:bg-fill-quaternary-dark dark:active:bg-fill-tertiary-dark p-0 min-h-0"},g={small:"px-3 py-1.5 text-ios-footnote min-h-[32px] gap-1",medium:"px-4 py-2.5 text-ios-body min-h-[44px] gap-2",large:"px-6 py-3.5 text-ios-headline min-h-[52px] gap-2"},w=m?"w-full":"",x=r=>{if(a||t){r.preventDefault();return}n==null||n(r)},R=()=>t?e.createElement(e.Fragment,null,e.createElement("div",{className:"spinner-ios h-4 w-4"}),e.createElement("span",{className:"ml-2"},"Loading...")):e.createElement(e.Fragment,null,i&&e.createElement("span",{className:"flex-shrink-0"},i),e.createElement("span",{className:t?"invisible":""},d),s&&e.createElement("span",{className:"flex-shrink-0"},s));return e.createElement("button",{ref:v,type:c,className:`${b} ${h[o]} ${g[u]} ${w} ${p}`.trim(),disabled:a||t,onClick:x,"data-testid":f,"aria-busy":t,"aria-disabled":a||t,...y},R())});l.displayName="Button";l.__docgenInfo={description:`iOS-inspired button component following Apple's Human Interface Guidelines.

Features:
- Multiple variants (primary, secondary, destructive, ghost, plain)
- Three size options with proper touch targets
- Loading state with spinner and width preservation
- Icon support with proper spacing
- Full accessibility support including ARIA attributes
- Smooth animations and hover effects
- Proper disabled state handling

@example
\`\`\`tsx
<Button
  variant="primary"
  size="medium"
  startIcon={<PlusIcon />}
  onClick={handleClick}
  loading={isSubmitting}
>
  Add Item
</Button>
\`\`\``,methods:[],displayName:"Button",props:{variant:{required:!1,tsType:{name:"union",raw:'"primary" | "secondary" | "destructive" | "ghost" | "plain"',elements:[{name:"literal",value:'"primary"'},{name:"literal",value:'"secondary"'},{name:"literal",value:'"destructive"'},{name:"literal",value:'"ghost"'},{name:"literal",value:'"plain"'}]},description:"Visual style variant following iOS design patterns",defaultValue:{value:'"primary"',computed:!1}},size:{required:!1,tsType:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}]},description:"Size variant affecting padding and font size",defaultValue:{value:'"medium"',computed:!1}},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Button content"},disabled:{required:!1,tsType:{name:"boolean"},description:"Whether the button is disabled",defaultValue:{value:"false",computed:!1}},loading:{required:!1,tsType:{name:"boolean"},description:"Whether the button is in loading state",defaultValue:{value:"false",computed:!1}},fullWidth:{required:!1,tsType:{name:"boolean"},description:"Whether the button should take full width of container",defaultValue:{value:"false",computed:!1}},startIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Icon to display before the text content"},endIcon:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"Icon to display after the text content"},onClick:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: React.MouseEvent<HTMLButtonElement>) => void",signature:{arguments:[{type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]},name:"event"}],return:{name:"void"}}},description:"Click event handler"},type:{required:!1,tsType:{name:"union",raw:'"button" | "submit" | "reset"',elements:[{name:"literal",value:'"button"'},{name:"literal",value:'"submit"'},{name:"literal",value:'"reset"'}]},description:"HTML button type",defaultValue:{value:'"button"',computed:!1}},className:{required:!1,tsType:{name:"string"},description:"Additional CSS classes to apply",defaultValue:{value:'""',computed:!1}},testId:{required:!1,tsType:{name:"string"},description:"Test identifier for automated testing"},"aria-label":{required:!1,tsType:{name:"string"},description:"Accessible label for screen readers (especially important for icon-only buttons)"}}};export{l as B};
